class Solution {
    
    //1007. Minimum Domino Rotations For Equal Row
    // Using HashMap
    //Time complexity : O(n) where n is the length of array A and B
    //Space complexity : O(n)--hashmap
    public int minDominoRotations(int[] A, int[] B) {
        
        HashMap<Integer,Integer> map = new HashMap<>();
         int target = -1;
        int count =0;
        
        for(int i =0;i < A.length; i++){
            int val = A[i];
             count = map.getOrDefault(val,0) + 1;
            map.put(val,count);
            if(count >= A.length){
                target = val;
                break;
            }
            
             val = B[i];
            count = map.getOrDefault(val,0) + 1;
            map.put(val,count);
            if(count >= A.length){
                target = val;
                break;
            }
                
                
        }
        int aRot =0;
        int bRot =0;
        for(int i =0;i < A.length; i++){
            if(A[i]!=target && B[i]!= target)
                    return -1;
            else if(A[i]!=target)
                aRot++;
            else if(B[i]!= target)
                bRot++;
            
            }
        return Math.min(aRot,bRot);
        
    }
}